"""Программа принимает два списка nums1 и nums2, а также два целых числа m и n
в качестве параметров.
Метод merge не возвращает значение, но изменяет список nums1 на месте.

В теле метода merge происходит объединение двух списков nums1 и nums2.
Однако детали реализации не указаны, так как это оставлено на усмотрение
разработчика.

Строка «Do not return anything, modify nums1 in-place instead» указывает на то,
что метод не должен возвращать значение, а должен изменять список nums1
непосредственно.

В данном случае метод merge сортирует объединённый список nums1[:m] + nums2[:n]
и присваивает результат nums1.
Таким образом, список nums1 изменяется и становится отсортированным.

После выполнения программы выводится отсортированный список nums1,
который был изменён в результате вызова метода merge.

Cуть задания в том, чтобы понять:
Что в Python при применении оператора "=" не изменяется
переменная, а создаётся новая и поэтому в контексте данного задания,
для того чтобы изменить переменную содержащую исходный список,
нужно использовать метод slice - чтобы успешно изменить саму исходную
переменную (но не создавать новую).
Если не сделать этого - то можно получить "удивительные" результаты,
когда вроде бы поменял значение переменной внутри функции,
а оно осталось прежним."""

nums1 = [1, 2, 3, 0, 0, 0]
m = 3
nums2 = [2, 5, 6]
n = 3


class Solution:
    def merge(self, nums1: list[int], m: int, nums2: list[int], n: int) -> None:
        """
        Не возвращает ничего, меняет nums1 на месте.
        """
        nums1[:m+n] = sorted(nums1[:m] + nums2[:n])
        return nums1


solution = Solution()
example_1 = solution.merge(nums1, m, nums2, n)

print(example_1)
print(nums1)